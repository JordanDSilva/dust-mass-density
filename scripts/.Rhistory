xi_C_ISM = p['xi_C_ISM']
Tw_ISM = p['Tw_ISM']
Tc_ISM = p['Tc_ISM']
yy = (xi_PAH_ISM*m17_norm(wave) + xi_MIR_ISM*l_MIR(wave) + xi_W_ISM*greybody_norm(wave = wave, Temp = Tw_ISM, beta = 1.5) + xi_C_ISM*greybody_norm(wave = wave, Temp = Tc_ISM, beta = 2.0)) * (f_mu_frac) * L_dust_tot
return(yy)
}
L_dust = function(wave, p){
yy = L_BC(wave, p) + L_ISM(wave, p)
return(yy)
}
p = c(
"L_dust_tot" = unname(totSED$dustlum["total"]),
# "L_dust_tot" = 1,
"f_mu_frac" = 1.0,
"xi_PAH_BC" = 0.15,
"xi_MIR_BC" = 0.45,
"xi_W_BC" = 0.40,
"Tw_BC" = 50,
"xi_PAH_ISM" = 0.22,
"xi_MIR_ISM" = 0.11,
"xi_W_ISM" = 0.07,
"xi_C_ISM" = 0.60,
"Tw_ISM" = 45,
"Tc_ISM" = 18
)
magplot(
totSED$DustEmit$wave/1e4,
log10(L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave) - 17,
type = "l",
log = "x",
lwd = 3,
xlim = c(1.5, 1000),
ylim = c(-11.5, -7),
# ylim = c(-9, -7),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
m17_norm = function(wave){
F0 = approx(waveout, m17_approx/max(m17_approx), 11.3e4)$y * 0.1
pah_emission = (F0*Florentzian/max(Florentzian) + m17_approx/max(m17_approx))
grey_body_continuum = greybody_norm(waveout, Temp = 850, beta = 1.0)
G4mu = approx(waveout, grey_body_continuum/max(grey_body_continuum), 4e4)$y
G0 = mean(approx(waveout, pah_emission/max(pah_emission), c(7.2,7.7,7.9)*1e4)$y) * 0.11
put_it_all_together = (m17_approx/max(m17_approx) + 0.15*Florentzian/max(Florentzian) + 0.05*grey_body_continuum/max(grey_body_continuum))
# suppressWarnings(magplot(waveout, m17_approx/max(m17_approx), log = "xy", type = "l", xlim = c(1e4, 30e4), ylim = c(1e-2, 1)))
# lines(waveout, F0*Florentzian/max(Florentzian))
# lines(waveout, G0*grey_body_continuum*G4mu)
# lines(waveout, put_it_all_together, col = "red")
yy = approx(waveout, put_it_all_together/trapz(waveout, put_it_all_together), wave)$y
return( yy )
}
l_MIR = function(wave){
0.5 * (greybody_norm(wave, Temp = 130, beta = 1.5) + greybody_norm(wave, Temp = 250, beta = 1.5))
}
L_BC = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_BC = p['xi_PAH_BC']
xi_MIR_BC = p['xi_MIR_BC']
xi_W_BC = p['xi_W_BC']
Tw_BC = p['Tw_BC']
yy = (xi_PAH_BC * m17_norm(wave) + xi_MIR_BC * l_MIR(wave) + xi_W_BC*greybody_norm(wave = wave, Temp = Tw_BC, beta = 1.5)) * (1 - f_mu_frac) * L_dust_tot
return(yy)
}
L_ISM = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_ISM = p['xi_PAH_ISM']
xi_MIR_ISM = p['xi_MIR_ISM']
xi_W_ISM = p['xi_W_ISM']
xi_C_ISM = p['xi_C_ISM']
Tw_ISM = p['Tw_ISM']
Tc_ISM = p['Tc_ISM']
yy = (xi_PAH_ISM*m17_norm(wave) + xi_MIR_ISM*l_MIR(wave) + xi_W_ISM*greybody_norm(wave = wave, Temp = Tw_ISM, beta = 1.5) + xi_C_ISM*greybody_norm(wave = wave, Temp = Tc_ISM, beta = 2.0)) * (f_mu_frac) * L_dust_tot
return(yy)
}
L_dust = function(wave, p){
yy = L_BC(wave, p) + L_ISM(wave, p)
return(yy)
}
p = c(
"L_dust_tot" = unname(totSED$dustlum["total"]),
# "L_dust_tot" = 1,
"f_mu_frac" = 1.0,
"xi_PAH_BC" = 0.15,
"xi_MIR_BC" = 0.45,
"xi_W_BC" = 0.40,
"Tw_BC" = 50,
"xi_PAH_ISM" = 0.22,
"xi_MIR_ISM" = 0.11,
"xi_W_ISM" = 0.07,
"xi_C_ISM" = 0.60,
"Tw_ISM" = 45,
"Tc_ISM" = 18
)
magplot(
totSED$DustEmit$wave/1e4,
log10(L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave) - 17,
type = "l",
log = "x",
lwd = 3,
xlim = c(1.5, 1000),
ylim = c(-11.5, -7),
# ylim = c(-9, -7),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
m17_norm = function(wave){
F0 = approx(waveout, m17_approx/max(m17_approx), 11.3e4)$y * 0.1
pah_emission = (F0*Florentzian/max(Florentzian) + m17_approx/max(m17_approx))
grey_body_continuum = greybody_norm(waveout, Temp = 850, beta = 1.0)
G4mu = approx(waveout, grey_body_continuum/max(grey_body_continuum), 4e4)$y
G0 = mean(approx(waveout, pah_emission/max(pah_emission), c(7.2,7.7,7.9)*1e4)$y) * 0.11
put_it_all_together = (m17_approx/max(m17_approx) + 0.20*Florentzian/max(Florentzian) + 0.05*grey_body_continuum/max(grey_body_continuum))
# suppressWarnings(magplot(waveout, m17_approx/max(m17_approx), log = "xy", type = "l", xlim = c(1e4, 30e4), ylim = c(1e-2, 1)))
# lines(waveout, F0*Florentzian/max(Florentzian))
# lines(waveout, G0*grey_body_continuum*G4mu)
# lines(waveout, put_it_all_together, col = "red")
yy = approx(waveout, put_it_all_together/trapz(waveout, put_it_all_together), wave)$y
return( yy )
}
l_MIR = function(wave){
0.5 * (greybody_norm(wave, Temp = 130, beta = 1.5) + greybody_norm(wave, Temp = 250, beta = 1.5))
}
L_BC = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_BC = p['xi_PAH_BC']
xi_MIR_BC = p['xi_MIR_BC']
xi_W_BC = p['xi_W_BC']
Tw_BC = p['Tw_BC']
yy = (xi_PAH_BC * m17_norm(wave) + xi_MIR_BC * l_MIR(wave) + xi_W_BC*greybody_norm(wave = wave, Temp = Tw_BC, beta = 1.5)) * (1 - f_mu_frac) * L_dust_tot
return(yy)
}
L_ISM = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_ISM = p['xi_PAH_ISM']
xi_MIR_ISM = p['xi_MIR_ISM']
xi_W_ISM = p['xi_W_ISM']
xi_C_ISM = p['xi_C_ISM']
Tw_ISM = p['Tw_ISM']
Tc_ISM = p['Tc_ISM']
yy = (xi_PAH_ISM*m17_norm(wave) + xi_MIR_ISM*l_MIR(wave) + xi_W_ISM*greybody_norm(wave = wave, Temp = Tw_ISM, beta = 1.5) + xi_C_ISM*greybody_norm(wave = wave, Temp = Tc_ISM, beta = 2.0)) * (f_mu_frac) * L_dust_tot
return(yy)
}
L_dust = function(wave, p){
yy = L_BC(wave, p) + L_ISM(wave, p)
return(yy)
}
p = c(
"L_dust_tot" = unname(totSED$dustlum["total"]),
# "L_dust_tot" = 1,
"f_mu_frac" = 1.0,
"xi_PAH_BC" = 0.15,
"xi_MIR_BC" = 0.45,
"xi_W_BC" = 0.40,
"Tw_BC" = 50,
"xi_PAH_ISM" = 0.22,
"xi_MIR_ISM" = 0.11,
"xi_W_ISM" = 0.07,
"xi_C_ISM" = 0.60,
"Tw_ISM" = 45,
"Tc_ISM" = 18
)
magplot(
totSED$DustEmit$wave/1e4,
log10(L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave) - 17,
type = "l",
log = "x",
lwd = 3,
xlim = c(1.5, 1000),
ylim = c(-11.5, -7),
# ylim = c(-9, -7),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
m17_norm = function(wave){
F0 = approx(waveout, m17_approx/max(m17_approx), 11.3e4)$y * 0.1
pah_emission = (F0*Florentzian/max(Florentzian) + m17_approx/max(m17_approx))
grey_body_continuum = greybody_norm(waveout, Temp = 850, beta = 1.0)
G4mu = approx(waveout, grey_body_continuum/max(grey_body_continuum), 4e4)$y
G0 = mean(approx(waveout, pah_emission/max(pah_emission), c(7.2,7.7,7.9)*1e4)$y) * 0.11
put_it_all_together = (m17_approx/max(m17_approx) + 0.20*Florentzian/max(Florentzian) + 0.1*grey_body_continuum/max(grey_body_continuum))
# suppressWarnings(magplot(waveout, m17_approx/max(m17_approx), log = "xy", type = "l", xlim = c(1e4, 30e4), ylim = c(1e-2, 1)))
# lines(waveout, F0*Florentzian/max(Florentzian))
# lines(waveout, G0*grey_body_continuum*G4mu)
# lines(waveout, put_it_all_together, col = "red")
yy = approx(waveout, put_it_all_together/trapz(waveout, put_it_all_together), wave)$y
return( yy )
}
l_MIR = function(wave){
0.5 * (greybody_norm(wave, Temp = 130, beta = 1.5) + greybody_norm(wave, Temp = 250, beta = 1.5))
}
L_BC = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_BC = p['xi_PAH_BC']
xi_MIR_BC = p['xi_MIR_BC']
xi_W_BC = p['xi_W_BC']
Tw_BC = p['Tw_BC']
yy = (xi_PAH_BC * m17_norm(wave) + xi_MIR_BC * l_MIR(wave) + xi_W_BC*greybody_norm(wave = wave, Temp = Tw_BC, beta = 1.5)) * (1 - f_mu_frac) * L_dust_tot
return(yy)
}
L_ISM = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_ISM = p['xi_PAH_ISM']
xi_MIR_ISM = p['xi_MIR_ISM']
xi_W_ISM = p['xi_W_ISM']
xi_C_ISM = p['xi_C_ISM']
Tw_ISM = p['Tw_ISM']
Tc_ISM = p['Tc_ISM']
yy = (xi_PAH_ISM*m17_norm(wave) + xi_MIR_ISM*l_MIR(wave) + xi_W_ISM*greybody_norm(wave = wave, Temp = Tw_ISM, beta = 1.5) + xi_C_ISM*greybody_norm(wave = wave, Temp = Tc_ISM, beta = 2.0)) * (f_mu_frac) * L_dust_tot
return(yy)
}
L_dust = function(wave, p){
yy = L_BC(wave, p) + L_ISM(wave, p)
return(yy)
}
p = c(
"L_dust_tot" = unname(totSED$dustlum["total"]),
# "L_dust_tot" = 1,
"f_mu_frac" = 1.0,
"xi_PAH_BC" = 0.15,
"xi_MIR_BC" = 0.45,
"xi_W_BC" = 0.40,
"Tw_BC" = 50,
"xi_PAH_ISM" = 0.22,
"xi_MIR_ISM" = 0.11,
"xi_W_ISM" = 0.07,
"xi_C_ISM" = 0.60,
"Tw_ISM" = 45,
"Tc_ISM" = 18
)
magplot(
totSED$DustEmit$wave/1e4,
log10(L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave) - 17,
type = "l",
log = "x",
lwd = 3,
xlim = c(1.5, 1000),
ylim = c(-11.5, -7),
# ylim = c(-9, -7),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
m17_norm = function(wave){
F0 = approx(waveout, m17_approx/max(m17_approx), 11.3e4)$y * 0.1
pah_emission = (F0*Florentzian/max(Florentzian) + m17_approx/max(m17_approx))
grey_body_continuum = greybody_norm(waveout, Temp = 850, beta = 1.0)
G4mu = approx(waveout, grey_body_continuum/max(grey_body_continuum), 4e4)$y
G0 = mean(approx(waveout, pah_emission/max(pah_emission), c(7.2,7.7,7.9)*1e4)$y) * 0.11
put_it_all_together = (m17_approx/max(m17_approx) + 0.24*Florentzian/max(Florentzian) + 0.05*grey_body_continuum/max(grey_body_continuum))
# suppressWarnings(magplot(waveout, m17_approx/max(m17_approx), log = "xy", type = "l", xlim = c(1e4, 30e4), ylim = c(1e-2, 1)))
# lines(waveout, F0*Florentzian/max(Florentzian))
# lines(waveout, G0*grey_body_continuum*G4mu)
# lines(waveout, put_it_all_together, col = "red")
yy = approx(waveout, put_it_all_together/trapz(waveout, put_it_all_together), wave)$y
return( yy )
}
l_MIR = function(wave){
0.5 * (greybody_norm(wave, Temp = 130, beta = 1.5) + greybody_norm(wave, Temp = 250, beta = 1.5))
}
L_BC = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_BC = p['xi_PAH_BC']
xi_MIR_BC = p['xi_MIR_BC']
xi_W_BC = p['xi_W_BC']
Tw_BC = p['Tw_BC']
yy = (xi_PAH_BC * m17_norm(wave) + xi_MIR_BC * l_MIR(wave) + xi_W_BC*greybody_norm(wave = wave, Temp = Tw_BC, beta = 1.5)) * (1 - f_mu_frac) * L_dust_tot
return(yy)
}
L_ISM = function(wave, p){
L_dust_tot = p['L_dust_tot']
f_mu_frac = p['f_mu_frac']
xi_PAH_ISM = p['xi_PAH_ISM']
xi_MIR_ISM = p['xi_MIR_ISM']
xi_W_ISM = p['xi_W_ISM']
xi_C_ISM = p['xi_C_ISM']
Tw_ISM = p['Tw_ISM']
Tc_ISM = p['Tc_ISM']
yy = (xi_PAH_ISM*m17_norm(wave) + xi_MIR_ISM*l_MIR(wave) + xi_W_ISM*greybody_norm(wave = wave, Temp = Tw_ISM, beta = 1.5) + xi_C_ISM*greybody_norm(wave = wave, Temp = Tc_ISM, beta = 2.0)) * (f_mu_frac) * L_dust_tot
return(yy)
}
L_dust = function(wave, p){
yy = L_BC(wave, p) + L_ISM(wave, p)
return(yy)
}
p = c(
"L_dust_tot" = unname(totSED$dustlum["total"]),
# "L_dust_tot" = 1,
"f_mu_frac" = 1.0,
"xi_PAH_BC" = 0.15,
"xi_MIR_BC" = 0.45,
"xi_W_BC" = 0.40,
"Tw_BC" = 50,
"xi_PAH_ISM" = 0.22,
"xi_MIR_ISM" = 0.11,
"xi_W_ISM" = 0.07,
"xi_C_ISM" = 0.60,
"Tw_ISM" = 45,
"Tc_ISM" = 18
)
magplot(
totSED$DustEmit$wave/1e4,
log10(L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave) - 17,
type = "l",
log = "x",
lwd = 3,
xlim = c(1.5, 1000),
ylim = c(-11.5, -7),
# ylim = c(-9, -7),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
magplot(
totSED$FinalLum$wave, totSED$FinalLum$lum * totSED$FinalLum$wave,
type = "l",
log = "xy",
lwd = 3,
xlim = c(1e4, 1e7),
ylim = c(1e7, 1e10),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
lines(
totSED$DustEmit$wave, totSED$DustEmit$lum * totSED$DustEmit$wave,
col = alpha("darkorange", 1.0),
lwd = 5
)
lines(
totSED$DustEmit$wave,
L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 5
)
Niters = 10000
magphys_parm_mat = matrix(data = 0L, nrow = 11, ncol = Niters)
for(i in 1:Niters){
xi_BC_parm_sample = runif(3, 0, 1)
xi_BC_parm_sample = xi_BC_parm_sample/sum(xi_BC_parm_sample)
xi_ISM_parm_sample = runif(4, 0, 1)
xi_ISM_parm_sample = xi_ISM_parm_sample/sum(xi_ISM_parm_sample)
magphys_parm_mat[,i] = c(
runif(1, 0, 1),
xi_BC_parm_sample,
runif(1, 10, 300),
xi_ISM_parm_sample,
runif(1, 10, 300),
runif(1, 10, 300)
)
}
magphys_dust_mass = foreach(i = 1:Niters, .combine = rbind) %do% {
if(i %% 100 == 0){
message(i)
}
magphys_parm = c(unname(totSED$dustlum["total"]), magphys_parm_mat[,i])
names(magphys_parm) = names(p)
magphys_lum = L_dust(totSED$DustEmit$wave, p = magphys_parm)
}
magplot(
totSED$FinalLum$wave, totSED$FinalLum$lum * totSED$FinalLum$wave,
type = "l",
log = "xy",
lwd = 3,
xlim = c(1e2, 1e7),
ylim = c(1e5, 1e11),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
lines(
totSED$DustEmit$wave, totSED$DustEmit$lum * totSED$DustEmit$wave,
col = alpha("darkorange", 1.0),
lwd = 5
)
lines(
totSED$DustEmit$wave,
L_dust(totSED$DustEmit$wave, p = p) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 5
)
magplot(
totSED$FinalLum$wave, totSED$FinalLum$lum * totSED$FinalLum$wave,
type = "l",
log = "xy",
lwd = 3,
xlim = c(1e2, 1e7),
ylim = c(1e5, 1e11),
xlab = "Wavelength [Ang]",
ylab = "Lum [Lsun / Ang]"
)
lines(
totSED$DustEmit$wave, totSED$DustEmit$lum * totSED$DustEmit$wave,
col = alpha("darkorange", 1.0),
lwd = 5
)
lines(
totSED$DustEmit$wave,
colQuantiles(as.matrix(magphys_dust_mass), probs = 0.05) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 2, lty = 3
)
lines(
totSED$DustEmit$wave,
colQuantiles(as.matrix(magphys_dust_mass), probs = 0.16) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 3, lty = 2
)
lines(
totSED$DustEmit$wave,
colQuantiles(as.matrix(magphys_dust_mass), probs = 0.84) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 3, lty = 2
)
lines(
totSED$DustEmit$wave,
colQuantiles(as.matrix(magphys_dust_mass), probs = 0.95) * totSED$DustEmit$wave,
col = alpha("red", 0.8),
lwd = 2, lty = 3
)
dim
dim(magphys_dust_mass)
dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = magphys_dust_mass[1,])
fuckyoucunt = dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = magphys_dust_mass[1,])
fuckyoucunt
fuckyoucunt = sapply(magphys_dust_mass, function(x){dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = x}["DustMass"])
fuckyoucunt = sapply(magphys_dust_mass, function(x){dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = x)}["DustMass"])
fuckyoucunt = sapply(magphys_dust_mass[1:10,], function(x){dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = x)}["DustMass"])
fuckyoucunt
fuckyoucunt = sapply(1:Niters, function(x){dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = magphys_dust_mass[x,])}["DustMass"])
fuckyoucunt
maghist(fuckyoucunt)
fuckyoucunt=dustmass(wave_star = totSED$StarsAtten$wave, lum_star_nodust = totSED$StarsUnAtten, lum_star_dust = totSED$StarsAtten$lum, wave_dust = totSED$DustEmit$wave, lum_dust = totSED$DustEmit$lum)
fuckyoucunt
?dustmass
dust_mass_tot = totSED$dustmass["total"]
dust_mass_tot
stellar_mass_tot = totSED$Stars$SMstar["SMstar"]
stellar_mass_tot
totSED$Stars$SMstar
totSED$Stars$SMstar
totSED$Stars$masstot
stellar_mass_tot = totSED$Stars$SMstar
stellar_mass_tot
library(magicaxis)
library(data.table)
library(foreach)
library(celestial)
library(doParallel)
library(ProSpect)
library(dplyr)
library(scales)
library(hyper.fit)
library(dftools)
library(Highlander)
library(matrixStats)
library(rhdf5)
library(stringr)
catalogueDir = "/Users/22252335/Documents/GAMA-DEVILS-SFR-AGN/data/"
gama_AGN = data.frame(fread("~/Documents/GAMA-DEVILS-SFR-AGN/data/GAMAMasterCat_BestFitParams.csv"))
gama_noAGN = fread(paste0(catalogueDir, 'gkvProSpectV02.csv'))
devilsd10_AGN = fread("~/Documents/GAMA-DEVILS-SFR-AGN/data/AGNTotalCat_MasterCat4.csv")
devilsd10_noAGN = readRDS(paste0(catalogueDir, 'DEVILS_D10ProSpectCat_02_02_2021_v0.3.rds')) #catalogue that Jess done without AGN contribution
devilsd10_noAGN = devilsd10_noAGN$cat
devilsd10_noAGN$area = 1.5
devilsd10_AGN$area = 1.5
LSS = fread("~/Documents/CSFRD-Compendium/GAMA-DEVILS/LSS.csv")
LSS_func = approxfun(LSS$lbt, LSS$super, yleft = 1.2137843, yright = 0.6403993)
idx_AGN = which(gama_AGN$CATAID %in% gama_noAGN$CATAID)
idx_noAGN = which(gama_noAGN$CATAID %in% gama_AGN$CATAID)
#get matching sets
gama_match_AGN = gama_AGN[idx_AGN, ]
gama_match_noAGN = gama_noAGN[idx_noAGN, ]
#sort by catalogue ID
sort_match_AGN = gama_match_AGN[order(gama_match_AGN$CATAID), ]
sort_match_noAGN = gama_match_noAGN[order(gama_match_noAGN$CATAID), ]
#make sure redshift column aligns with CATAID
sort_match_noAGN$z = sort_match_AGN$z
sort_match_noAGN$area = 217.54
zvec = seq(0, 30, 0.01)
lbtvec = cosdistTravelTime(z = zvec, ref = "Planck18")
lbt2z = approxfun(
lbtvec, zvec
)
lbt_bins = seq(0, 12, 0.75)
lbt_mids = lbt_bins[-length(lbt_bins)] + diff(lbt_bins) / 2
zbins = lbt2z(lbt_bins)
zmids = zbins[-length(zbins)] + diff(zbins) / 2
zbins
source("~/Documents/DustMassDensity/scripts/compare_prospect_magphys.R", echo = TRUE)
foobar = h5read(
file = h5file, name = "Photometry/FinalSample"
)
h5file = '~/Documents/DustMassDensity/data/all_data.h5'
foobar = h5read(
file = h5file, name = "Photometry/FinalSample"
)
median(foobar$zMagphys)
median(foobar$zProSpect)
ma(foobar$zProSpect)
max(foobar$zProSpect)
max(foobar$zMagphys)
median(foobar$zProSpect-foobar$zMagphys)
median(|foobar$zProSpect-foobar$zMagphys|)
median(abs(foobar$zProSpect-foobar$zMagphys))
?ProSpect
?ProSpectSED
mdustwAGN = h5read(file = h5file, name = "cosmic/MdustwAGN")
mdustwAGN
source("~/Documents/DustMassDensity/scripts/omega.R", echo = TRUE)
